<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="real_barista" default="false" />
  <arg name="speak_active" default="false" />
  <arg name="pipeline_active" default="true" />

  <!-- Start the navigation systems -->
  <include file="$(find costa_robot)/launch/localization_demo.launch">
    <arg name="map_name" value="simple10x10"/>
    <arg name="real_barista" value="false"/>
  </include>

  <group unless="$(arg real_barista)">
    <include file="$(find spawn_robot_tools_pkg)/launch/spawn_and_delete_server.launch"/>
  </group>


  <!-- We start the load sensor subscriber that publishes info about the state of load and calibration -->
  <include file="$(find barista_systems)/launch/load_sensor_start_sub.launch">
    <arg name="real_barista" value="$(arg real_barista)" />
  </include>

  <!-- We start the waypoint generator to be able to reset tables on the fly -->
  <node pkg="ros_waypoint_generator"
          type="ros_waypoint_generator"
          name="ros_waypoint_generator_node">
    </node>


  <!-- To Play sound for customer feedback -->
  <group if="$(arg speak_active)">
    <include file="$(find barista_systems)/launch/droid_talker.launch"/>
  </group>

  <!-- Diagnostics to battery pub -->
  <node name="battery_charge_pub_node" pkg="barista_systems" type="battery_charge_pub.py"
      respawn="false" output="screen">
  </node>

  <!-- Start the Pipeline -->
  <group if="$(arg pipeline_active)">
    <node pkg="barista_gazebo"
            type="pick_calibrate_go_return_pipeline.py"
            name="pick_calibrate_go_return_pipeline_node"
            output="screen"
            args="$(arg speak_active)">
        <param name="way_points_file_path"
                type="string"
                value="$(find barista_gazebo)/waypoints_saved/simple10x10.pickle" />
    </node>
  </group>






</launch>
